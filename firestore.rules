// Production-ready Firestore Security Rules for AI Staging App
// These rules ensure users can only access their own data

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
      // Users collection - users can only read/write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Additional validation for user document writes
      allow create: if request.auth != null 
                   && request.auth.uid == userId
                   && request.resource.data.keys().hasAll(['uid', 'email', 'createdAt'])
                   && request.resource.data.uid == request.auth.uid
                   && request.resource.data.email == request.auth.token.email;
      
      allow update: if request.auth != null 
                   && request.auth.uid == userId
                   && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['firstName', 'lastName', 'displayName', 'photoURL', 'updatedAt']);
      
      // User uploads subcollection - users can only access their own uploads
      match /uploads/{uploadId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
        allow create: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // Staged images collection - users can only access their own staged images
    match /staged-images/{imageId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    // User uploads collection - users can only access their own uploads
    match /user-uploads/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      match /images/{imageId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
        allow create: if request.auth != null 
                     && request.auth.uid == userId
                     && request.resource.data.userId == request.auth.uid;
      }    }
    
    // Usage stats collection - users can only read/write their own usage data
    match /usage-stats/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null 
                   && request.auth.uid == userId
                   && request.resource.data.userId == request.auth.uid;
    }
    
    // Deny all other requests
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
